<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on thinkerou</title>
    <link>https://thinkerou.com/tags/python/</link>
    <description>Recent content in Python on thinkerou</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 Feb 2016 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://thinkerou.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Python 深浅拷贝</title>
      <link>https://thinkerou.com/post/python-copy-deepcopy/</link>
      <pubDate>Sun, 21 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>https://thinkerou.com/post/python-copy-deepcopy/</guid>
      <description>Python 拷贝现象 先看一段代码：
&amp;gt;&amp;gt;&amp;gt; a = [1, 2, 3] &amp;gt;&amp;gt;&amp;gt; b = a &amp;gt;&amp;gt;&amp;gt; b.append(4) &amp;gt;&amp;gt;&amp;gt; b [1, 2, 3, 4] &amp;gt;&amp;gt;&amp;gt; a [1, 2, 3, 4] &amp;gt;&amp;gt;&amp;gt;  代码的原意是，变量 b 从变量 a 处拷贝后，然后修改 b 而不改变原来的变量 a 的值；但事实是，原变量的值却变了！
问题现象所涉及到的点就是：Python 的对象赋值和深浅拷贝。
 在 Python 中赋值语句总是建立对象的引用值，而不是复制对象，这样看来 Python 变量更像是指针而不是数据存储区域。
 继续看如下代码：
&amp;gt;&amp;gt;&amp;gt; a = [1, 2, 3] &amp;gt;&amp;gt;&amp;gt; a[1] = a &amp;gt;&amp;gt;&amp;gt; a [1, [...], 3] &amp;gt;&amp;gt;&amp;gt;  这段代码的本意是想给 a[1] 重新赋值为 [1, 2, 3]，但是却死循环了（[.</description>
    </item>
    
  </channel>
</rss>